% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/broom.R
\name{broom_tidy_pairwise_glmer}
\alias{broom_tidy_pairwise_glmer}
\title{Generalized linear mixed-effects models fit to all pairs of group predictor}
\usage{
broom_tidy_pairwise_glmer(
  data,
  formula,
  group,
  family = gaussian,
  conf.int = FALSE,
  conf.level = 0.95,
  exponentiate = FALSE,
  ...
)
}
\arguments{
\item{data}{data frame containing the variables named in formula}

\item{formula}{a two-sided linear formula object describing both the
fixed-effects and random-effects part of the model, with the response on the
left of a ~ operator and the terms, separated by + operators, on the right.
Random-effects terms are distinguished by vertical bars ("|") separating
expressions for design matrices from grouping factors.}

\item{group}{name of a predictor in formula used to construct data subsets
(each subset defined by a pair of group levels) to which the model will be fit}

\item{family}{a GLM family, see \code{\link[stats:glm]{glm}} and \code{\link[stats:family]{family}}.}

\item{conf.int}{Logical indicating whether or not to include a confidence
interval in the tidied output. Defaults to FALSE.}

\item{conf.level}{The confidence level to use for the confidence interval if
conf.int = TRUE. Must be strictly greater than 0 and less than 1. Defaults to
 0.95, which corresponds to a 95 percent confidence interval.}

\item{exponentiate}{Logical indicating whether or not to exponentiate the the
coefficient estimates. This is typical for logistic and multinomial
regressions, but a bad idea if there is no log or logit link. Defaults to FALSE.}

\item{...}{further arguments passed to \code{\link[lme4:glmer]{glmer()}}}
}
\value{
a tibble containing all models estimates and associated information
}
\description{
Generalized linear mixed-effects models fit to all pairs of group predictor
}
\examples{
lme4::cbpp \%>\%
  tibble::rowid_to_column('obs') \%>\%
  dplyr::mutate(
    herd = as.numeric(herd),
    herd = dplyr::case_when(
      herd <= 5 ~ '[1,5]',
      herd <= 10 ~ '[6,10]',
      herd <= 15 ~ '[11,15]',
      TRUE ~ NA_character_
    ),
    herd = factor(herd, levels = c('[1,5]', '[6,10]', '[11,15]')),
    period = as.numeric(period)
  ) \%>\%
  broom_tidy_pairwise_glmer('cbind(incidence, size - incidence) ~ herd + period + herd*period + (1 | obs)', herd, binomial)
}
